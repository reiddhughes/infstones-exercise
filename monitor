#!/usr/bin/env python3

import argparse
import subprocess
import time

import psutil


def main():
    argument_parser = argparse.ArgumentParser()
    argument_parser.add_argument("PROCESS_NAME", default="forever")
    parsed_args = argument_parser.parse_args()
    monitored_process_name = parsed_args.PROCESS_NAME
    processes_to_monitor = {}
    
    while True:
        print("Checking")
        all_pids = psutil.pids()
        matching_running_processes_by_name = set()

        for single_pid in all_pids:
            try:
                pid_process = psutil.Process(single_pid)
                pid_process_cmd = pid_process.cmdline()
                name_with_arguments = " ".join(pid_process_cmd)
                
                if monitored_process_name in name_with_arguments:
                    processes_to_monitor[name_with_arguments] = pid_process.cmdline()
                    matching_running_processes_by_name.add(name_with_arguments)
                else:
                    pass

            except psutil.AccessDenied:
                pass
            except psutil.NoSuchProcess:
                pass
        
        set_of_process_names_to_monitor = set(processes_to_monitor.keys())
        missing_process_names = set_of_process_names_to_monitor.difference(
            matching_running_processes_by_name
        )
    
        for single_missing_process_name in missing_process_names:
            process_commands = processes_to_monitor[single_missing_process_name]
            print("Starting: ")
            print(process_commands)
            subprocess.Popen(process_commands)

        time.sleep(30)


if __name__ == '__main__':
    main()

